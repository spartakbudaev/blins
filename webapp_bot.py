#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Telegram –±–æ—Ç "–ë–ª–∏–Ω–Ω–∞—è –±–∞—à–Ω—è" —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import os
import logging
import json
import socket
from http.server import HTTPServer, SimpleHTTPRequestHandler
import threading
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext, MessageHandler, Filters
from pyngrok import ngrok, conf

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBAPP_URL = None  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
LOCAL_URL = None   # –õ–æ–∫–∞–ª—å–Ω—ã–π URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
HTTPS_URL_AVAILABLE = False  # –§–ª–∞–≥ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ HTTPS URL

# –°–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π)
WEB_SERVER_PORTS = [8080, 8000, 8888, 9000, 9090, 9001, 9002, 8090, 8001, 8002, 7000, 7001]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã
game_results = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
class WebAppHandler(SimpleHTTPRequestHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    def __init__(self, *args, **kwargs):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
        directory = os.path.join(os.path.dirname(os.path.abspath(__file__)), "webapp")
        super().__init__(*args, directory=directory, **kwargs)
    
    def log_message(self, format, *args):
        # –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
        pass

def find_available_port():
    """–ù–∞—Ö–æ–¥–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–æ—Ä—Ç –¥–ª—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
    for port in WEB_SERVER_PORTS:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤–æ–±–æ–¥–µ–Ω –ª–∏ –ø–æ—Ä—Ç
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                s.bind(("localhost", port))
                logger.info(f"–ù–∞–π–¥–µ–Ω –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–æ—Ä—Ç: {port}")
                return port
        except OSError:
            logger.warning(f"–ü–æ—Ä—Ç {port} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π...")
    
    # –ï—Å–ª–∏ –≤—Å–µ –ø–æ—Ä—Ç—ã –∑–∞–Ω—è—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None
    logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç")
    return None

def start_web_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    global LOCAL_URL
    
    # –ù–∞—Ö–æ–¥–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–æ—Ä—Ç
    port = find_available_port()
    if port is None:
        return None
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        handler = WebAppHandler
        httpd = HTTPServer(("", port), handler)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL
        LOCAL_URL = f"http://localhost:{port}"
        
        logger.info(f"–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        server_thread = threading.Thread(target=httpd.serve_forever)
        server_thread.daemon = True
        server_thread.start()
        
        return port
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return None

def start_ngrok():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç ngrok —Ç—É–Ω–Ω–µ–ª—å –¥–ª—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
    global WEBAPP_URL, HTTPS_URL_AVAILABLE, LOCAL_URL
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π URL
    if LOCAL_URL is None:
        logger.error("–õ–æ–∫–∞–ª—å–Ω—ã–π URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å ngrok")
        return None
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ URL
    try:
        port = int(LOCAL_URL.split(":")[-1])
    except (ValueError, IndexError):
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –ø–æ—Ä—Ç –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ URL: {LOCAL_URL}")
        return None
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω ngrok –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        ngrok_token = os.getenv("NGROK_TOKEN")
        if ngrok_token:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è ngrok
            conf.get_default().auth_token = ngrok_token
            logger.info("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω ngrok –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        else:
            logger.warning("–¢–æ–∫–µ–Ω ngrok –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º ngrok —Ç—É–Ω–Ω–µ–ª—å
        public_url = ngrok.connect(port).public_url
        WEBAPP_URL = public_url
        HTTPS_URL_AVAILABLE = True
        logger.info(f"Ngrok —Ç—É–Ω–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω: {WEBAPP_URL}")
        return WEBAPP_URL
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ngrok —Ç—É–Ω–Ω–µ–ª—è: {e}")
        
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å ngrok, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ HTTPS
        HTTPS_URL_AVAILABLE = False
        WEBAPP_URL = LOCAL_URL
        logger.info(f"–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ: {LOCAL_URL}")
        return None

def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start"""
    user = update.effective_user
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if HTTPS_URL_AVAILABLE and WEBAPP_URL:
        # –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω HTTPS URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        keyboard = [
            [InlineKeyboardButton(
                "–ò–≥—Ä–∞—Ç—å –≤ –ë–ª–∏–Ω–Ω—É—é –±–∞—à–Ω—é", 
                web_app=WebAppInfo(url=WEBAPP_URL)
            )]
        ]
        
        welcome_text = (
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–ë–ª–∏–Ω–Ω–∞—è –±–∞—à–Ω—è'!\n\n"
            f"–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É."
        )
    else:
        # –ï—Å–ª–∏ HTTPS URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º URL
        keyboard = [
            [InlineKeyboardButton("–û –∏–≥—Ä–µ", callback_data="about_game")]
        ]
        
        welcome_text = (
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–ë–ª–∏–Ω–Ω–∞—è –±–∞—à–Ω—è'!\n\n"
            f"‚ö†Ô∏è –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ.\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ –∞–¥—Ä–µ—Å—É:\n"
            f"{LOCAL_URL}\n\n"
            f"–î–ª—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ Telegram —Ç—Ä–µ–±—É–µ—Ç—Å—è HTTPS URL."
        )
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    update.message.reply_text(
        welcome_text,
        reply_markup=reply_markup
    )

def about_game(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–û –∏–≥—Ä–µ'"""
    query = update.callback_query
    query.answer()
    
    query.edit_message_text(
        "üéÆ –ë–ª–∏–Ω–Ω–∞—è –±–∞—à–Ω—è - —ç—Ç–æ –∏–≥—Ä–∞, –≥–¥–µ –Ω—É–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫—É—é –±–∞—à–Ω—é –∏–∑ –±–ª–∏–Ω–æ–≤.\n\n"
        "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n"
        "1. –ë–ª–∏–Ω –¥–≤–∏–∂–µ—Ç—Å—è –∏–∑ —Å—Ç–æ—Ä–æ–Ω—ã –≤ —Å—Ç–æ—Ä–æ–Ω—É\n"
        "2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ò–≥—Ä–∞—Ç—å', —á—Ç–æ–±—ã –æ–ø—É—Å—Ç–∏—Ç—å –±–ª–∏–Ω\n"
        "3. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–ª–æ–∂–∏—Ç—å –±–ª–∏–Ω—ã —Ä–æ–≤–Ω–æ –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞\n"
        "4. –ï—Å–ª–∏ –±–ª–∏–Ω —É–ø–∞–¥–µ—Ç —Å –±–∞—à–Ω–∏, –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞\n\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –æ—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ –∞–¥—Ä–µ—Å—É:\n"
        f"{LOCAL_URL}"
    )

def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if hasattr(update.effective_message, 'web_app_data') and update.effective_message.web_app_data:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        try:
            data = json.loads(update.effective_message.web_app_data.data)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã
            user_id = update.effective_user.id
            username = update.effective_user.username or update.effective_user.first_name
            
            game_results[user_id] = {
                "username": username,
                "score": data.get("score", 0)
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            update.message.reply_text(
                f"üéÆ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
                f"–¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {data.get('score', 0)} –±–ª–∏–Ω–æ–≤\n\n"
                f"–•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start"
            )
        except json.JSONDecodeError:
            update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –∏–ª–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
        )

def leaderboard(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤"""
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å—á–µ—Ç–∞
    sorted_results = sorted(
        game_results.values(),
        key=lambda x: x["score"],
        reverse=True
    )
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π –ª–∏–¥–µ—Ä–æ–≤
    if sorted_results:
        message = "üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ üèÜ\n\n"
        
        for i, result in enumerate(sorted_results[:10], 1):
            message += f"{i}. {result['username']}: {result['score']} –±–ª–∏–Ω–æ–≤\n"
    else:
        message = "–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –ø—É—Å—Ç–∞. –ë—É–¥—å –ø–µ—Ä–≤—ã–º, –∫—Ç–æ —Å—ã–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—É!"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    update.message.reply_text(message)

def help_command(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞"""
    update.message.reply_text(
        "üîç –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n"
        "/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/leaderboard - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "–ò–≥—Ä–∞ '–ë–ª–∏–Ω–Ω–∞—è –±–∞—à–Ω—è' - —ç—Ç–æ –∏–≥—Ä–∞, –≥–¥–µ –Ω—É–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫—É—é –±–∞—à–Ω—é –∏–∑ –±–ª–∏–Ω–æ–≤."
    )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    global WEBAPP_URL, HTTPS_URL_AVAILABLE, LOCAL_URL
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
    if not BOT_TOKEN:
        logger.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    port = start_web_server()
    if port is None:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä!")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL
    LOCAL_URL = f"http://localhost:{port}"
    
    # –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å ngrok
    try:
        ngrok_url = start_ngrok()
        if ngrok_url:
            WEBAPP_URL = ngrok_url
            HTTPS_URL_AVAILABLE = True
        else:
            WEBAPP_URL = LOCAL_URL
            HTTPS_URL_AVAILABLE = False
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ngrok: {e}")
        WEBAPP_URL = LOCAL_URL
        HTTPS_URL_AVAILABLE = False
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ
    print("=" * 50)
    print("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ '–ë–ª–∏–Ω–Ω–∞—è –±–∞—à–Ω—è' —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º")
    print("=" * 50)
    
    if HTTPS_URL_AVAILABLE:
        print(f"\n–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: {WEBAPP_URL}")
        print(f"–õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: {LOCAL_URL}")
    else:
        print(f"\n–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ: {LOCAL_URL}")
        print("\n–í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è —Ä–∞–±–æ—Ç—ã –≤ Telegram –Ω—É–∂–µ–Ω HTTPS URL.")
        print("–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ngrok –¥–æ–±–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª .env —Å—Ç—Ä–æ–∫—É:")
        print("NGROK_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_ngrok")
        print("\n–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ: https://dashboard.ngrok.com/get-started/your-authtoken")
    
    print("\n–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    
    # –°–æ–∑–¥–∞–µ–º Updater –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    try:
        updater = Updater(BOT_TOKEN)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        dispatcher = updater.dispatcher
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        dispatcher.add_handler(CommandHandler("start", start))
        dispatcher.add_handler(CommandHandler("leaderboard", leaderboard))
        dispatcher.add_handler(CommandHandler("help", help_command))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
        dispatcher.add_handler(MessageHandler(Filters.text, handle_message))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
        dispatcher.add_handler(CallbackQueryHandler(about_game, pattern="about_game"))
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        updater.start_polling()
        updater.idle()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    main() 